#Loops and run times

set.seed(853)
y<-matrix(rnorm(1000000),nrow=1000)
z<-0*y
time1<-as.numeric(Sys.time())
#loop:
for(i in 1:1000){
  for(j in 1:1000){
    z[i,j]<-y[i,j]^2
  }
}
time2<-as.numeric(Sys.time())
# using object form in R:
z<-y^2
time3<-as.numeric(Sys.time())

# run time increase factor:
(time2-time1)/(time3-time2)

#1000 by 1000 matrix [1] 108.0932


#Loops and run times

set.seed(853)
y<-matrix(rnorm(100),nrow=10)
z<-0*y
time1<-as.numeric(Sys.time())
#loop:
for(i in 1:10){
  for(j in 1:10){
    z[i,j]<-y[i,j]^2
  }
}
time2<-as.numeric(Sys.time())
# using object form in R:
z<-y^2
time3<-as.numeric(Sys.time())

# run time increase factor:
(time2-time1)/(time3-time2)

#10 by 10 matrix [1] 2.208329



dim.m <- c(10,20,50,100,200,500,800,1000)
rtif <- numeric(8)
size.m <- 8

for (k in 1:size.m)
{
#Loops and run times

set.seed(853)
y<-matrix(rnorm(dim.m[k]^2),nrow=dim.m[k])
z<-0*y
time1<-as.numeric(Sys.time())
#loop:
for(i in 1:dim.m[k]){
  for(j in 1:dim.m[k]){
    z[i,j]<-y[i,j]^2
  }
}
time2<-as.numeric(Sys.time())
# using object form in R:
z<-y^2
time3<-as.numeric(Sys.time())

# run time increase factor:
rtif[k] <- (time2-time1)/(time3-time2)
print(rtif)
}
